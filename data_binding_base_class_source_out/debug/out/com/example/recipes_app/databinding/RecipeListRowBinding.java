// Generated by view binder compiler. Do not edit!
package com.example.recipes_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.recipes_app.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class RecipeListRowBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton recipeListrowDelete;

  @NonNull
  public final ImageButton recipeListrowEdit;

  @NonNull
  public final ShapeableImageView recipeListrowImage;

  @NonNull
  public final TextView recipeListrowName;

  @NonNull
  public final TextView recipeListrowUsername;

  private RecipeListRowBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageButton recipeListrowDelete, @NonNull ImageButton recipeListrowEdit,
      @NonNull ShapeableImageView recipeListrowImage, @NonNull TextView recipeListrowName,
      @NonNull TextView recipeListrowUsername) {
    this.rootView = rootView;
    this.recipeListrowDelete = recipeListrowDelete;
    this.recipeListrowEdit = recipeListrowEdit;
    this.recipeListrowImage = recipeListrowImage;
    this.recipeListrowName = recipeListrowName;
    this.recipeListrowUsername = recipeListrowUsername;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RecipeListRowBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RecipeListRowBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.recipe_list_row, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RecipeListRowBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.recipe_listrow_delete;
      ImageButton recipeListrowDelete = ViewBindings.findChildViewById(rootView, id);
      if (recipeListrowDelete == null) {
        break missingId;
      }

      id = R.id.recipe_listrow_edit;
      ImageButton recipeListrowEdit = ViewBindings.findChildViewById(rootView, id);
      if (recipeListrowEdit == null) {
        break missingId;
      }

      id = R.id.recipe_listrow_image;
      ShapeableImageView recipeListrowImage = ViewBindings.findChildViewById(rootView, id);
      if (recipeListrowImage == null) {
        break missingId;
      }

      id = R.id.recipe_listrow_name;
      TextView recipeListrowName = ViewBindings.findChildViewById(rootView, id);
      if (recipeListrowName == null) {
        break missingId;
      }

      id = R.id.recipe_listrow_username;
      TextView recipeListrowUsername = ViewBindings.findChildViewById(rootView, id);
      if (recipeListrowUsername == null) {
        break missingId;
      }

      return new RecipeListRowBinding((MaterialCardView) rootView, recipeListrowDelete,
          recipeListrowEdit, recipeListrowImage, recipeListrowName, recipeListrowUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
